{
  "compilerOptions": {
    // This defines the version of JavaScript to compile the TypeScript code to.
    // Setting "esnext" allows you to play with all the latest features, but if
    // you need greater compatibility with older browsers, you can set this to another option.
    "target": "esnext",

    // You should set this option to "commonjs" to make sure everybody can use your package,
    // whether theyâ€™re using TypeScript or JavaScript, are targeting Node.js or the Web.
    "module": "commonjs",

    // Activate strict compiler checks.
    "strict": true,

    // Do not compile when there are unused variables or imports.
    "noUnusedLocals": true,

    // Let TypeScript transpile JSX. Setting this can save you from setting up Babel.
    // You can read more at https://www.typescriptlang.org/docs/handbook/jsx.html#basic-usage
    "jsx": "react",

    // Allow TypeScript to import JSON files directly.
    "resolveJsonModule": true,

    // Remove comments from generated JavaScript code.
    "removeComments": true,

    // Generate a source map from JS to TS. Useful for debugging.
    // Don't forget to blacklist ./dist/**/*.js.map in the "files" key of package.json
    "sourceMap": true,

    // Enable incremental builds.
    // Don't forget to blacklist ./dist/**/*.tsbuildinfo in the "files" key of package.json
    "incremental": true,

    // Generate a .d.ts file, for TypeScript users.
    "declaration": true,

    // Do not emit output files. Prevents us from accidentally building with this file
    // instead of tsconfig.build.json.
    "noEmit": true
  },

  // Include all TypeScript files, including those that shouldn't be built.
  "include": ["src", "benchmark", "test"]
}
